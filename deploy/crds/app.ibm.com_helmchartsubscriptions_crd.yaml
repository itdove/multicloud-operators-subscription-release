apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: helmchartsubscriptions.app.ibm.com
spec:
  group: app.ibm.com
  names:
    kind: HelmChartSubscription
    listKind: HelmChartSubscriptionList
    plural: helmchartsubscriptions
    singular: helmchartsubscription
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: HelmChartSubscription is the Schema for the subscriptions API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: HelmChartSubscriptionSpec defines the desired state of HelmChartSubscription
            // +k8s:openapi-gen=true
          properties:
            channel:
              type: string
            chartsSource:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "operator-sdk generate k8s" to regenerate code after
                modifying this file Add custom validation using kubebuilder tags:
                https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html
                RepoURL is the URL of the repository. Defaults to stable repo. Source
                holds the url toward the helm-chart'
              properties:
                github:
                  description: GitHubSubscription provides information to retrieve
                    the helm-chart from github
                  properties:
                    branch:
                      type: string
                    chartsPath:
                      type: string
                    urls:
                      items:
                        type: string
                      type: array
                  type: object
                helmRepo:
                  description: HelmRepoSubscription provides the urls to retrieve
                    the helm-chart
                  properties:
                    urls:
                      items:
                        type: string
                      type: array
                  type: object
                type:
                  description: SourceTypeEnum types of sources
                  type: string
              type: object
            configRef:
              description: Configuration parameters to access the helm-repo defined
                in the CatalogSource
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            installPlanApproval:
              description: Approval approval types
              type: string
            name:
              description: To specify 1 package in channel
              type: string
            packageFilter:
              description: To specify more than 1 package in channel
              properties:
                annotations:
                  additionalProperties:
                    type: string
                  type: object
                labelSelector:
                  description: A label selector is a label query over a set of resources.
                    The result of matchLabels and matchExpressions are ANDed. An empty
                    label selector matches all objects. A null label selector matches
                    no objects.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                version:
                  pattern: ([0-9]+)((\.[0-9]+)(\.[0-9]+)|(\.[0-9]+)?(\.[xX]))$
                  type: string
              type: object
            packageOverrides:
              description: To provide flexibility to override package in channel with
                local input
              items:
                description: Overrides field in deployable
                properties:
                  packageName:
                    type: string
                  packageOverrides:
                    items:
                      description: PackageOverride describes rules for override
                      type: object
                    minItems: 1
                    type: array
                required:
                - packageName
                - packageOverrides
                type: object
              type: array
            secretRef:
              description: "For hub use only, to specify which clusters to go to \tPlacement
                *placementv1alpha1.Placement `json:\"placement,omitempty\"` Secret
                to use to access the helm-repo defined in the CatalogSource."
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
          required:
          - channel
          type: object
        status:
          description: HelmChartSubscriptionStatus defines the observed state of HelmChartSubscription
            // +k8s:openapi-gen=true
          properties:
            lastUpdateTime:
              format: date-time
              type: string
            message:
              type: string
            packages:
              additionalProperties:
                description: HelmChartSubscriptionUnitStatus defines status of a unit
                  (subscription or package)
                properties:
                  lastUpdateTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  status:
                    description: Phase are Propagated if it is in hub or Subscribed
                      if it is in endpoint
                    type: string
                required:
                - lastUpdateTime
                type: object
              type: object
            reason:
              type: string
            status:
              description: Phase are Propagated if it is in hub or Subscribed if it
                is in endpoint
              type: string
          required:
          - lastUpdateTime
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
